<%
var carbon = require('carbon');

include("./constants.jag");
var roles = require ("./roles.json").roles;

function getLoggedInUser () {
    var LoggedInUser = {
        isAdmin: false,
        isOperatorAdmin: false,
        isServiceProvider: false,
        isCustomerCareUser: false,
        isPublisher: false
    };

    var user = session.get('user');
    var role = getRole(user);

    switch (role) {
        case ROLES.ADMIN:
            LoggedInUser.isAdmin = true;
            break;
        case ROLES.OPERATOR_ADMIN:
            LoggedInUser.isOperatorAdmin = true;
            break;
        case ROLES.CUSTOMER_CARE:
            LoggedInUser.isCustomerCareUser = true;
            break;
        case ROLES.SERVICE_PROVIDER:
            LoggedInUser.isServiceProvider = true;
            break;
        case ROLES.PUBLISHER:
            LoggedInUser.isPublisher = true;
    }

    LoggedInUser.username = user.username + "@" + user.domain;
    LoggedInUser.tenantId = user.tenantId;
    LoggedInUser.domain = user.domain;
    LoggedInUser.operatorNameInProfile = getOperator(user);

    return LoggedInUser;
}

function getRole (user) {
     var role;
     for (var i = 0; i < user.roles.length; i++) {
         var tempRole = user.roles[i];
         if (tempRole == roles.admin) {
            role = ROLES.ADMIN;
            break;
         } else if (tempRole.toLowerCase() == roles.operatoradmin) {
            role = ROLES.OPERATOR_ADMIN;
            break;
         }  else if (tempRole.toLowerCase() == roles.customercare) {
            role = ROLES.CUSTOMER_CARE;
            break;
         }  else if (tempRole == roles.serviceprovider) {
            role = ROLES.SERVICE_PROVIDER;
         }
     }
     return role;
 }

function getOperator(user) {
    var userRealmService = carbon.server.osgiService('org.wso2.carbon.user.api.UserRealmService');
    var tenantId = userRealmService.getTenantManager().getTenantId(user.domain);
    var userRealm = userRealmService.getTenantUserRealm(tenantId);
    var userStore = userRealm.getUserStoreManager();
    var operatorName = userStore.getUserClaimValue(user.username, 'http://wso2.org/claims/operatorName', null);
    return operatorName;
}

function getDataQuery(data, role, user) {
    var providerConf = data[PROVIDER_CONF];
    var all = true;
    var serviceProvider = "";

    if (role == ROLES.SERVICE_PROVIDER){
        serviceProvider = user.username + "@" + user.domain;
    }

    if (providerConf[PROVIDER_NAME] == TYPE.OPERATOR) {
        if (data.operatorName != "(all)" && data.operatorName != "all" && data.operatorName != undefined) {
            providerConf.query += "operatorName:" + data.operatorName;
            all = false;
        }
    } else if (providerConf[PROVIDER_NAME] == TYPE.SP) {
        if (data.serviceProvider != "0" && data.serviceProvider != "(0)" && data.operatorName != undefined) {
            providerConf.query += "serviceProviderId:" + data.serviceProvider +" AND operatorName:" + data.operatorName;
            all = false;
        }
    } else if (providerConf[PROVIDER_NAME] == TYPE.APP) {
        if (data.applicationId != "0" && data.applicationId != "(0)" && data.operatorName != undefined) {
            providerConf.query += "applicationId:" + data.applicationId;
            all = false;
        }
    }

    var andSign = '';

    if ((role != ROLES.ADMIN && all == false) || (providerConf[PROVIDER_NAME] == "batch")) {
        andSign = ' AND ';
    }

    if (role == ROLES.OPERATOR_ADMIN){
        providerConf.query += andSign + " operatorName:"+getOperator(user);
    }

    var serviceProviderName = user.username + "@" + user.domain;

    if (role == ROLES.SERVICE_PROVIDER && (providerConf[PROVIDER_NAME] == TYPE.OPERATOR || providerConf[PROVIDER_NAME] == TYPE.SP)) {
        providerConf.query += andSign + ' _serviceProvider:"' + serviceProviderName + '"';
        providerConf.tableName = STREAM.API_SUMMERY;

    } else if (role == ROLES.SERVICE_PROVIDER && providerConf[PROVIDER_NAME] == "batch") {
        providerConf.query += andSign + ' _serviceProvider:"' + serviceProvider + '"';

    } else if (role == ROLES.PUBLISHER && (providerConf[PROVIDER_NAME] == TYPE.OPERATOR || providerConf[PROVIDER_NAME] == "batch")) {
        providerConf.query += andSign + ' _serviceProvider:"' + serviceProvider + '"';
    }
    return providerConf.query;
};

function getBatchQuery(data, role, user) {
    var providerConf = data[PROVIDER_CONF];

    providerConf.query = "responseTime:[" + data.dateStart + " TO " + data.dateEnd + "]";

    if (data.operatorName != "all" && data.operatorName != undefined) {
        providerConf.query += " AND operatorName:'" + data.operatorName + "'";
    }

    if (data.serviceProvider != "0" && data.serviceProvider != undefined) {
        providerConf.query += " AND serviceProviderId:'" + data.serviceProvider + "'";
    }

    if (data.applicationName != "0" && data.applicationName != undefined) {
        providerConf.query += " AND applicationId:" + data.applicationName;
    }

    if (data.api != "0" && data.api != undefined) {
        providerConf.query += " AND apiID:" + data.api;
    }

    if (role == ROLES.SERVICE_PROVIDER) {
        var serviceProvider = user.username+"@"+user.domain;
        providerConf.query += ' AND serviceProvider:"' + serviceProvider + '"';
    } else if (role == ROLES.OPERATOR_ADMIN) {
        providerConf.query += " AND operatorName:" + getOperator(user);
    }

    providerConf.query += ' AND direction:"sb"';
    return providerConf.query;
}
%>