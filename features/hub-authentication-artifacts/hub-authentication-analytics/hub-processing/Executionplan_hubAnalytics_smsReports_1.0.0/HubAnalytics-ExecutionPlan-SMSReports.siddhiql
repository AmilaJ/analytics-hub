/* Enter a unique ExecutionPlan */
@Plan:name('HubAnalytics-ExecutionPlan-SMSReports')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* streams/tables queries */

@Import('org.wso2telco.analytics.hub.stream.processedStatistics:1.0.0')
define stream getProcessedResponse (api string, resourcePath string, method string, responseTime long, serviceTime long, serviceProvider string, apiPublisher string,
 applicationName string, requestId string, operatorId string, responseCode string, isSuccess bool, msisdn string, direction string, jsonBody string, serviceProviderId string,
 spUserId string, spConsumerKey string, errorMessageId string, errorText string,
 responseTimeRange string, year int, month int, day int, hour int, operatorName string, apiPublisherID string,
 apiID string, department string, applicationId string);

@Export('org.wso2telco.analytics.hub.stream.sms.processedStatistics:1.0.0')
define stream SMSProcessedResponse1 (api string, responseTime long, serviceTime long, serviceProvider string, apiPublisher string, applicationName string,
operatorId string, responseCode string, msisdn string, direction string, eventType string, clientCorrelator string, senderAddress string, destinationAddress string,
status string, message string, count int ,operatorCode string, messageId string, filterCriteria string, year int, month int, day int, hour int);


/**
* Confirms the response is SMS test
*/
@info(name = 'query1')
from getProcessedResponse [api == 'testsms' and isSuccess == true]
select api, resourcePath, responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,year, month, day, hour
insert into tempSMSResponse;

/**
* Confirms the response is a send SMS response
*/
@info(name = 'query2')
from tempSMSResponse [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'outboundSMSMessageRequest') is null) == false]#log('###getProcessedResponse query2###')
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,year, month, day, hour
insert into tempSendSMSResponse;


/**
* Creates a temporary stream to store fields of the json body
*/
@info(name = 'query3')
from tempSendSMSResponse
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,'' as eventType,'' as clientCorrelator,'' as senderAddress,'' as destinationAddress,'' as status,'' as message,0 as count,year, month, day, hour
insert into tempSendSMSPreProcessedResponse;

/**
* Use the stream processor to extract the fields of the json body and creates the success response
*/
@info(name = 'query4')
from tempSendSMSPreProcessedResponse#wso2TelcoHubAnalytics:getSMSStream(jsonBody,'sendSMS')
select api,responseTime, serviceTime, serviceProvider, apiPublisher, applicationName, operatorId, responseCode, msisdn, direction, eventType, clientCorrelator, senderAddress, destinationAddress, status, message, count, '' as operatorCode, '' as messageId, '' as filterCriteria, year, month, day, hour
insert into SMSProcessedResponse1;

/**
* Confirms the response is a receive SMS response
*/
@info(name = 'query5')
from tempSMSResponse [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'inboundSMSMessageList') is null) == false]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn, direction,jsonBody,year, month, day, hour
insert into tempReceiveSMSResponse;

/**
* Creates a temporary stream to store fields of the json body
*/
@info(name = 'query6')
from tempReceiveSMSResponse
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,'' as eventType,'' as clientCorrelator, '' as senderAddress,'' as destinationAddress, '' as status, '' as message, 0 as count, '' as operatorCode,'' as messageId, '' as filterCriteria,year, month, day, hour
insert into tempReceiveSMSPreProcessedResponse;

/**
* Confirms the response is a delivery notification response
*/
@info(name = 'query8')
from tempSMSResponse [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoList') is null) == false]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody, '' as eventType, '' as clientCorrelator, '' as senderAddress, '' as destinationAddress, '' as status, '' as message, 0 as count, year, month, day, hour
insert into tempDeliveryNotificationSMSPreProcessedResponse;

/**
* Enter the delivery information to the output stream.
*/
@info(name = 'query9')
from tempDeliveryNotificationSMSPreProcessedResponse#wso2TelcoHubAnalytics:getSMSStream(jsonBody,'deliveryInfoList')
select api,responseTime, serviceTime, serviceProvider, apiPublisher, applicationName, operatorId, responseCode, msisdn, direction, eventType, '' as clientCorrelator, senderAddress, destinationAddress, status, '' as message, 0 as count, '' as operatorCode, '' as messageId, '' as filterCriteria, year, month, day, hour
insert into SMSProcessedResponse1;

/**
* Triggers for responses for subscribe to SMS delivery notifcations. Creates a temporary table to store the fields is it is a responses for Subscribe to SMS delivery notifcations.
*/
@info(name = 'query10')
from tempSMSResponse [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryReceiptSubscription') is null) == false]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody, '' as eventType, '' as clientCorrelator, '' as senderAddress, '' as destinationAddress, '' as status, '' as message, 0 as count, year, month, day, hour
insert into tempDeliveryRecptSubsResponse;

/**
* Enter the subscription information into the output stream.
*/
@info(name = 'query11')
from tempDeliveryRecptSubsResponse
select api,responseTime, serviceTime, serviceProvider, apiPublisher, applicationName, operatorId, responseCode, msisdn, direction, 'SubscriptionToDeliveryNotifications' as eventType, '' as clientCorrelator, senderAddress, destinationAddress, status, '' as message, 0 as count, '' as operatorCode, '' as messageId, '' as filterCriteria, year, month, day, hour
insert into SMSProcessedResponse1;


/**
* Stop subscription to delivery notifications
*/
@info(name = 'query12')
from tempSMSResponse [(responseCode == '204') and (str:regexp(resourcePath, ".stopsubscribetodelivery/(.*)"))]
select api, resourcePath, responseTime, serviceTime, serviceProvider, apiPublisher, applicationName, operatorId, responseCode, msisdn, direction, 'StopSubscriptionToDeliveryNotifications' as eventType, '' as clientCorrelator, '' as senderAddress, '' as destinationAddress, '' as status, '' as message, 0 as count, '' as operatorCode, '' as messageId, '' as filterCriteria, year, month, day, hour
insert into SMSProcessedResponse1;

/**
* Stop subscription to message notifications
*/
@info(name = 'query13')
from tempSMSResponse [(responseCode == '204') and (str:regexp(resourcePath, ".*inbound/subscriptions(.*)"))]
select api, '' as resourcePath, responseTime, serviceTime, serviceProvider, apiPublisher, applicationName, operatorId, responseCode, msisdn, direction, 'StopSubscriptiontoMessageNotifcations' as eventType, '' as clientCorrelator, '' as senderAddress, '' as destinationAddress, '' as status, '' as message, 0 as count, '' as operatorCode, '' as messageId, '' as filterCriteria, year, month, day, hour
insert into SMSProcessedResponse1;



/**
* Extract the fields of the json body for south bound and creates the success response
*/
/*
@info(name = 'query9')
from tempDeliveryNotificationSMSPreProcessedResponse
select  api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,'deliveryNotification' as eventType,
'' as clientCorrelator,'' as senderAddress,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.address'),'string') as destinationAddress,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.deliveryStatus'),'string') as status,
'' as  message, 0 as count,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.operatorCode'),'string') as operatorCode,
 '' as messageId,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.filterCriteria'),'string') as filterCriteria,
year, month, day, hour
insert into SMSProcessedResponse1;
*/
